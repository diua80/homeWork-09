{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,wBACpCI,aAAcL,SAASC,cAAc,0BA0CvC,SAASK,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAjDPV,EAAKC,KAAKiB,iBAAiB,UAE3B,SAA0BC,GACxBA,EAAMC,iBAEN,IAAIC,EAAQC,SAAStB,EAAKI,WAAWmB,OAC/BC,EAAOF,SAAStB,EAAKK,UAAUkB,OAG/BE,EAgBR,SAAwBC,EAAQhB,EAAOc,GAIrC,IAHA,IAAMC,EAAW,GAGRE,EAAI,EAAGA,GAAKD,EAAQC,IAAK,CAChC,IACMC,EAAUpB,EADCmB,EACuBjB,GACxCe,EAASI,KAAKD,GACdlB,GAASc,C,CAGX,OAAOC,C,CA3BUK,CAFFR,SAAStB,EAAKM,YAAYiB,OAEDF,EAAOG,GAE/CV,QAAQiB,IAAIN,EAASO,KAAI,SAACJ,EAASK,GACjC,OAAOL,EACJM,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjBZ,EAAAsC,OAAOC,QAAQ,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAE9D6B,OAAM,SAAAJ,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClBZ,EAAAsC,OAAOI,QAAQ,sBAAqCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delayInput: document.querySelector('input[name=\"delay\"]'),\n  stepInput: document.querySelector('input[name=\"step\"]'),\n  amountInput: document.querySelector('input[name=\"amount\"]'),\n  submitButton: document.querySelector('button[type=\"submit\"]'),\n}\n\nrefs.form.addEventListener('submit', handleFormSubmit);\n\nfunction handleFormSubmit(event) {\n  event.preventDefault();\n  \n  let delay = parseInt(refs.delayInput.value);\n  const step = parseInt(refs.stepInput.value);\n  const amount = parseInt(refs.amountInput.value);\n  \n  const promises = createPromises(amount, delay, step);\n\n  Promise.all(promises.map((promise, index) => {\n    return promise\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }))\n    // .catch(error => {\n    //   console.error('Error:', error);\n    // });\n}\n\nfunction createPromises(amount, delay, step) {\n  const promises = [];\n  // let delay = initialDelay;\n  \n  for (let i = 1; i <= amount; i++) {\n    const position = i;\n    const promise = createPromise(position, delay);\n    promises.push(promise);\n    delay += step;\n  }\n  \n  return promises;\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  \n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delayInput","stepInput","amountInput","submitButton","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delay1","parseInt","value","step","promises","amount","i","promise","push","$ce04d3a99e08e73b$var$createPromises","all","map","index","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.8f6d82ab.js.map"}