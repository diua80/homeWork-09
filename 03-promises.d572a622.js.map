{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,uBACnCE,UAAWH,SAASC,cAAc,sBAClCG,YAAaJ,SAASC,cAAc,wBACpCI,aAAcL,SAASC,cAAc,0BA0BvC,SAASK,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACpC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC7BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAjCbV,EAAKC,KAAKiB,iBAAiB,UAE3B,SAA0BC,GACxBA,EAAMC,iBAEN,IAAIC,EAAQC,SAAStB,EAAKI,WAAWmB,OACrC,MAAMC,EAAOF,SAAStB,EAAKK,UAAUkB,OAC/BE,EAASH,SAAStB,EAAKM,YAAYiB,OAEzC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAQC,IAAK,CAEhBlB,EADCkB,EACuBL,GAGrCM,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBZ,EAAA8B,OAAOC,QAAQ,uBAAqBpB,QAAiBC,MAAU,IAEhEoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBZ,EAAA8B,OAAOG,QAAQ,sBAAoBtB,QAAeC,MAAU,IAGhEW,GAASG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delayInput: document.querySelector('input[name=\"delay\"]'),\n  stepInput: document.querySelector('input[name=\"step\"]'),\n  amountInput: document.querySelector('input[name=\"amount\"]'),\n  submitButton: document.querySelector('button[type=\"submit\"]'),\n}\nrefs.form.addEventListener('submit', handleFormSubmit);\n\nfunction handleFormSubmit(event) {\n  event.preventDefault();\n\n  let delay = parseInt(refs.delayInput.value);\n  const step = parseInt(refs.stepInput.value);\n  const amount = parseInt(refs.amountInput.value);\n\n  for (let i = 1; i <= amount; i++) {\n    const position = i;\n    const promise = createPromise(position, delay);\n\n    promise\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delay += step;\n  }\n}\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n    return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delayInput","stepInput","amountInput","submitButton","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delay1","parseInt","value","step","amount","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.d572a622.js.map"}